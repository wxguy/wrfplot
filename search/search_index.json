{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#about-wrfplot","title":"About wrfplot","text":"<p><code>wrfplot</code> is a Command Line application, written in Python programming language,  to plot a set of diagnostic forecast variables from the Weather Research and  Forecasting (WRF) atmospheric model output file.  Though, WRF model output files are ust a NetCDF file, it requires one to install various software and libraries to plot a single variable. Python has many modules that can deal with WRF model output data set. However, setting up these libraries, plotting variables through reading a lot of documentation is a tedious process. <code>wrfplot</code> aims to fill this gap by proving an application that is straightforward to install and use.</p> <p>The idea of developing <code>wrfplot</code> came to my mind as I frequently revisit the same code base again and again to tweak a  few lines of code to get changes in final plots. Therefore, I was looking for a command line application  that would help me to generate a common WRF model forecast images by providing appropriate command line options.  I could not find any and hence created one.</p>"},{"location":"#use-cases","title":"Use Cases","text":"<p>A typical use case of <code>wrfplot</code> would be to include as part of your WRF model run framework to plotting of variables immediately after the model run is completed.  The other use case would be to use it for producing publication quality 2D maps that have little tweaking for your publication.</p> <p>Note</p> <p><code>wrfplot</code> is a new application. If you find any issues related to plotting variables or documentation, please open an issue in Github as given in Support secion.</p> <p>The best way to explore the application is to read and execute the extensive examples provided in usage section.</p> <p>For complete list of options, execute the following command in the terminal or cmd window:</p> <pre><code>wrfplot --help\n</code></pre>"},{"location":"#source-code","title":"Source Code","text":"<p><code>wrfplot</code> is an Open Source application and released under General Public License (GPL) Version 3.  The source code of the application can be found at https://github.com/wxguy/wrfplot. </p>"},{"location":"authors/","title":"Authors","text":""},{"location":"authors/#development-lead","title":"Development Lead","text":"<p>J Sundar wrf.guy@gmail.com</p>"},{"location":"authors/#developers","title":"Developers","text":"<p>None yet. Why not be the first?</p>"},{"location":"authors/#other-contributors","title":"Other contributors","text":"<p>Those who have given their feedback and reported bugs can be found in https://github.com/wxguy/wrfplot/issues.</p>"},{"location":"colormaps/","title":"Colormaps","text":""},{"location":"colormaps/#colormaps-usage","title":"Colormaps Usage","text":"<p><code>wrfplot</code> supports a rich set of colormaps to choose for plotting variables of your desire. There are various default colormaps used by <code>wrfplot</code> for various variables.  These are carefully selected based on articles written on choosing colormaps in maplotlib documentation and forecast images generated by various global forecasting agencies. Finally, you have to convince your users and hence you should have the option to choose the colormap of your choice. <code>wrfplot</code> aloows you to do that. It uses <code>colormaps</code> python module for doing this. This package has a lis level of good-looking and scientific colormaps, including NCAR, GMT MATLAB etc.</p> <p>Tip</p> <p>It is highly recommended to visit https://pratiman-91.github.io/colormaps to look at visual appealing of each colormaps and its name. The same is required to be applied as part of an argument when using <code>wrfplot</code>.</p>"},{"location":"colormaps/#list-colormaps","title":"List Colormaps","text":"<p>The colormaps module has many colormaps names that are challenging to remember. Therefore, to know the list of supported colourmaps, you can use the following command to view it in terminal:</p> <p><pre><code>wrfplot --list-cmaps\n</code></pre> and the list of colormaps would be displayed as shown below.</p> <pre><code>['BkBlAqGrYeOrReViWh200', 'BkBlAqGrYeOrReViWh200_r', 'BlAqGrWh2YeOrReVi22', 'BlAqGrWh2YeOrReVi22_r', 'BlAqGrYeOrRe', 'BlAqGrYeOrReVi200', 'BlAqGrYeOrReVi200_r', 'BlAqGrYeOrRe_r', 'BlGrYeOrReVi200', 'BlGrYeOrReVi200_r', 'BlRe', 'BlRe_r', 'BlWhRe', 'BlWhRe_r', 'BlueDarkOrange18', 'BlueDarkOrange18_r', 'BlueDarkRed18', 'BlueDarkRed18_r', 'BlueGreen14', 'BlueGreen14_r', 'BlueRed', 'BlueRedGray', 'BlueRedGray_r', 'BlueRed_r', 'BlueWhiteOrangeRed', 'BlueWhiteOrangeRed_r', 'BlueYellowRed', 'BlueYellowRed_r', 'BrownBlue12', 'BrownBlue12_r', 'Cat12', 'Cat12_r', 'GHRSST_anomaly', 'GHRSST_anomaly_r', 'GMT_cool', 'GMT_cool_r', 'GMT_copper', 'GMT_copper_r', 'GMT_drywet', 'GMT_drywet_r', 'GMT_gebco', 'GMT_gebco_r', 'GMT_globe', 'GMT_globe_r', 'GMT_gray', 'GMT_gray_r', 'GMT_haxby', 'GMT_haxby_r', 'GMT_hot', 'GMT_hot_r', 'GMT_jet', 'GMT_jet_r', 'GMT_nighttime', 'GMT_nighttime_r', 'GMT_no_green', 'GMT_no_green_r', 'GMT_ocean', 'GMT_ocean_r', 'GMT_paired', 'GMT_paired_r', 'GMT_panoply', 'GMT_panoply_r', 'GMT_polar', 'GMT_polar_r', 'GMT_red2green', 'GMT_red2green_r', 'GMT_relief', 'GMT_relief_oceanonly', 'GMT_relief_oceanonly_r', 'GMT_relief_r', 'GMT_seis', 'GMT_seis_r', 'GMT_split', 'GMT_split_r', 'GMT_topo', 'GMT_topo_r', 'GMT_wysiwyg', 'GMT_wysiwyg_r', 'GMT_wysiwygcont', 'GMT_wysiwygcont_r', 'GSFC_landsat_udf_density', 'GSFC_landsat_udf_density_r', 'GrayWhiteGray', 'GrayWhiteGray_r', 'GreenMagenta16', 'GreenMagenta16_r', 'GreenYellow', 'GreenYellow_r', 'NCV_banded', 'NCV_banded_r', 'NCV_blu_red', 'NCV_blu_red_r', 'NCV_blue_red', 'NCV_blue_red_r', 'NCV_bright', 'NCV_bright_r', 'NCV_gebco', 'NCV_gebco_r', 'NCV_jaisnd', 'NCV_jaisnd_r', 'NCV_jet', 'NCV_jet_r', 'NCV_manga', 'NCV_manga_r', 'NCV_rainbow2', 'NCV_rainbow2_r', 'NCV_roullet', 'NCV_roullet_r', 'NEO_div_vegetation_a', 'NEO_div_vegetation_a_r', 'NEO_div_vegetation_b', 'NEO_div_vegetation_b_r', 'NEO_div_vegetation_c', 'NEO_div_vegetation_c_r', 'NEO_modis_ndvi', 'NEO_modis_ndvi_r', 'NMCRef', 'NMCRef_r', 'NMCVel', 'NMCVel_r', 'NOC_ndvi', 'NOC_ndvi_r', 'OceanLakeLandSnow', 'OceanLakeLandSnow_r', 'SVG_Gallet13', 'SVG_Gallet13_r', 'SVG_Lindaa06', 'SVG_Lindaa06_r', 'SVG_Lindaa07', 'SVG_Lindaa07_r', 'SVG_bhw3_22', 'SVG_bhw3_22_r', 'SVG_es_landscape_79', 'SVG_es_landscape_79_r', 'SVG_feb_sunrise', 'SVG_feb_sunrise_r', 'SVG_foggy_sunrise', 'SVG_foggy_sunrise_r', 'SVG_fs2006', 'SVG_fs2006_r', 'StepSeq25', 'StepSeq25_r', 'UKM_hadcrut', 'UKM_hadcrut_r', 'ViBlGrWhYeOrRe', 'ViBlGrWhYeOrRe_r', 'WhBlGrYeRe', 'WhBlGrYeRe_r', 'WhBlReWh', 'WhBlReWh_r', 'WhViBlGrYeOrRe', 'WhViBlGrYeOrReWh', 'WhViBlGrYeOrReWh_r', 'WhViBlGrYeOrRe_r', 'WhiteBlue', 'WhiteBlueGreenYellowRed', 'WhiteBlueGreenYellowRed_r', 'WhiteBlue_r', 'WhiteGreen', 'WhiteGreen_r', 'WhiteYellowOrangeRed', 'WhiteYellowOrangeRed_r', '__class__', '__delattr__', '__dict__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__le__', '__lt__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__version__', '__weakref__', '_coltbl', '_parse_cmaps', 'accent', 'accent_3', 'accent_3_r', 'accent_4', 'accent_4_r', 'accent_5', 'accent_5_r', 'accent_6', 'accent_6_r', 'accent_7', 'accent_7_r', 'accent_8', 'accent_8_r', 'accent_r', 'acton', 'acton_r', 'aggrnyl', 'aggrnyl_r', 'agsunset', 'agsunset_r', 'algae', 'algae_r', 'amber', 'amber_r', 'amethyst', 'amethyst_r', 'amp', 'amp_r', 'amwg', 'amwg256', 'amwg256_r', 'amwg_blueyellowred', 'amwg_blueyellowred_r', 'amwg_r', 'antique', 'antique_r', 'apple', 'apple_r', 'arctic', 'arctic_r', 'armyrose', 'armyrose_r', 'b2_31', 'b2_31_r', 'balance', 'balance_r', 'bam', 'bam_r', 'bamako', 'bamako_r', 'bamo', 'bamo_r', 'batlow', 'batlow_r', 'batlowk', 'batlowk_r', 'batloww', 'batloww_r', 'berlin', 'berlin_r', 'bilbao', 'bilbao_r', 'bl_11', 'bl_11_r', 'blue_8_5g2', 'blue_8_5g2_r', 'blue_bl111', 'blue_bl111_r', 'blue_blgra2', 'blue_blgra2_r', 'blue_blue3', 'blue_blue3_r', 'blue_blueb1', 'blue_blueb1_r', 'blue_c16adjw', 'blue_c16adjw_r', 'blue_gblue', 'blue_gblue_r', 'blue_lbluec1', 'blue_lbluec1_r', 'blue_medb717b', 'blue_medb717b_r', 'bluegrey_dark', 'bluegrey_dark_r', 'bluegrey_light', 'bluegrey_light_r', 'bluered_12', 'bluered_12_r', 'bluered_6', 'bluered_6_r', 'blues', 'blues_3', 'blues_3_r', 'blues_4', 'blues_4_r', 'blues_5', 'blues_5_r', 'blues_6', 'blues_6_r', 'blues_7', 'blues_7_r', 'blues_8', 'blues_8_r', 'blues_9', 'blues_9_r', 'blues_dark', 'blues_dark_r', 'blues_light', 'blues_light_r', 'blues_r', 'blugrn', 'blugrn_r', 'bluyl', 'bluyl_r', 'bold', 'bold_r', 'br4div', 'br4div_r', 'brbg', 'brbg_10', 'brbg_10_r', 'brbg_11', 'brbg_11_r', 'brbg_3', 'brbg_3_r', 'brbg_4', 'brbg_4_r', 'brbg_5', 'brbg_5_r', 'brbg_6', 'brbg_6_r', 'brbg_7', 'brbg_7_r', 'brbg_8', 'brbg_8_r', 'brbg_9', 'brbg_9_r', 'brbg_r', 'broc', 'brocO', 'brocO_r', 'broc_r', 'brown_br119a', 'brown_br119a_r', 'brown_browns', 'brown_browns_r', 'brown_brye1b', 'brown_brye1b_r', 'brown_grawarm1', 'brown_grawarm1_r', 'brown_orange1', 'brown_orange1_r', 'brown_ortanish1', 'brown_ortanish1_r', 'brown_peachy', 'brown_peachy_r', 'brown_red3b', 'brown_red3b_r', 'brown_sable', 'brown_sable_r', 'brown_vbrown1', 'brown_vbrown1_r', 'browngray', 'browngray_r', 'bruce2', 'bruce2_r', 'brwnyl', 'brwnyl_r', 'bubblegum', 'bubblegum_r', 'buda', 'buda_r', 'bugn', 'bugn_3', 'bugn_3_r', 'bugn_4', 'bugn_4_r', 'bugn_5', 'bugn_5_r', 'bugn_6', 'bugn_6_r', 'bugn_7', 'bugn_7_r', 'bugn_8', 'bugn_8_r', 'bugn_9', 'bugn_9_r', 'bugn_r', 'bukavu', 'bukavu_r', 'bupu', 'bupu_3', 'bupu_3_r', 'bupu_4', 'bupu_4_r', 'bupu_5', 'bupu_5_r', 'bupu_6', 'bupu_6_r', 'bupu_7', 'bupu_7_r', 'bupu_8', 'bupu_8_r', 'bupu_9', 'bupu_9_r', 'bupu_r', 'burg', 'burg_r', 'burgyl', 'burgyl_r', 'c_7_16', 'c_7_16_r', 'c_blgr1', 'c_blgr1_r', 'c_pch1', 'c_pch1_r', 'c_violet1', 'c_violet1_r', 'c_yelpch1', 'c_yelpch1_r', 'cb_9step', 'cb_9step_r', 'cb_rainbow', 'cb_rainbow_inv', 'cb_rainbow_inv_r', 'cb_rainbow_r', 'cet_c_grey', 'cet_c_grey_15', 'cet_c_grey_15_r', 'cet_c_grey_r', 'cet_c_mrybm', 'cet_c_mrybm_35', 'cet_c_mrybm_35_r', 'cet_c_mrybm_r', 'cet_c_mygbm', 'cet_c_mygbm_30', 'cet_c_mygbm_30_r', 'cet_c_mygbm_r', 'cet_c_protanopic_deuteranopic_bwyk', 'cet_c_protanopic_deuteranopic_bwyk_r', 'cet_c_protanopic_deuteranopic_wywb', 'cet_c_protanopic_deuteranopic_wywb_r', 'cet_c_tritanopic_cwrk_4', 'cet_c_tritanopic_cwrk_4_r', 'cet_c_tritanopic_wrwc_7', 'cet_c_tritanopic_wrwc_7_r', 'cet_c_wrwbw', 'cet_c_wrwbw_40', 'cet_c_wrwbw_40_r', 'cet_c_wrwbw_r', 'cet_d_bkr', 'cet_d_bkr_r', 'cet_d_bky', 'cet_d_bky_r', 'cet_d_bwg', 'cet_d_bwg_r', 'cet_d_bwr', 'cet_d_bwr_r', 'cet_d_cwm_8', 'cet_d_cwm_8_r', 'cet_d_gkr', 'cet_d_gkr_r', 'cet_d_gwr', 'cet_d_gwr_r', 'cet_d_gwv', 'cet_d_gwv_r', 'cet_d_isoluminant_cjm', 'cet_d_isoluminant_cjm1', 'cet_d_isoluminant_cjm1_r', 'cet_d_isoluminant_cjm_r', 'cet_d_isoluminant_cjo', 'cet_d_isoluminant_cjo_r', 'cet_d_linear_bjr', 'cet_d_linear_bjr_r', 'cet_d_linear_bjy', 'cet_d_linear_bjy_r', 'cet_d_protanopic_deuteranopic_bwy', 'cet_d_protanopic_deuteranopic_bwy_r', 'cet_d_rainbow_bgymr', 'cet_d_rainbow_bgymr_r', 'cet_d_tritanopic_cwr', 'cet_d_tritanopic_cwr_r', 'cet_g_bw', 'cet_g_bw_minc', 'cet_g_bw_minc1', 'cet_g_bw_minc1_r', 'cet_g_bw_minc_maxl', 'cet_g_bw_minc_maxl_r', 'cet_g_bw_minc_minl', 'cet_g_bw_minc_minl_r', 'cet_g_bw_minc_r', 'cet_g_bw_r', 'cet_g_category10', 'cet_g_category10_r', 'cet_g_hv', 'cet_g_hv_r', 'cet_i', 'cet_i_cgo', 'cet_i_cgo1', 'cet_i_cgo1_r', 'cet_i_cgo_r', 'cet_i_r', 'cet_l_bgy', 'cet_l_bgy_r', 'cet_l_bgyw', 'cet_l_bgyw1', 'cet_l_bgyw1_r', 'cet_l_bgyw_r', 'cet_l_blue', 'cet_l_blue1', 'cet_l_blue1_r', 'cet_l_blue_r', 'cet_l_bmw', 'cet_l_bmw1', 'cet_l_bmw1_r', 'cet_l_bmw_r', 'cet_l_bmy', 'cet_l_bmy1', 'cet_l_bmy1_r', 'cet_l_bmy_r', 'cet_l_gow', 'cet_l_gow1', 'cet_l_gow1_r', 'cet_l_gow_r', 'cet_l_green', 'cet_l_green_r', 'cet_l_grey', 'cet_l_grey1', 'cet_l_grey1_r', 'cet_l_grey_r', 'cet_l_kbc', 'cet_l_kbc_r', 'cet_l_kbgyw', 'cet_l_kbgyw_r', 'cet_l_kgy', 'cet_l_kgy_r', 'cet_l_kry', 'cet_l_kry1', 'cet_l_kry1_r', 'cet_l_kry2', 'cet_l_kry2_r', 'cet_l_kry_r', 'cet_l_kryw', 'cet_l_kryw1', 'cet_l_kryw1_r', 'cet_l_kryw2', 'cet_l_kryw2_r', 'cet_l_kryw_r', 'cet_l_protanopic_deuteranopic_kbjyw', 'cet_l_protanopic_deuteranopic_kbjyw_r', 'cet_l_protanopic_deuteranopic_kbw', 'cet_l_protanopic_deuteranopic_kbw_r', 'cet_l_ternary_blue', 'cet_l_ternary_blue_r', 'cet_l_ternary_green', 'cet_l_ternary_green_r', 'cet_l_ternary_red', 'cet_l_ternary_red_r', 'cet_l_tritanopic_krjcw', 'cet_l_tritanopic_krjcw1', 'cet_l_tritanopic_krjcw1_r', 'cet_l_tritanopic_krjcw_r', 'cet_l_wcmr', 'cet_l_wcmr_r', 'cet_l_worb', 'cet_l_worb_r', 'cet_l_wyor', 'cet_l_wyor_r', 'cet_r_bgyr', 'cet_r_bgyr1', 'cet_r_bgyr1_r', 'cet_r_bgyr_r', 'cet_r_bgyrm', 'cet_r_bgyrm1', 'cet_r_bgyrm1_r', 'cet_r_bgyrm_r', 'chroma', 'chroma_r', 'circular_0', 'circular_0_r', 'circular_1', 'circular_1_r', 'circular_2', 'circular_2_r', 'cividis', 'cividis_r', 'classic_16', 'classic_16_r', 'cmp_b2r', 'cmp_b2r_r', 'cmp_flux', 'cmp_flux_r', 'cmp_haxby', 'cmp_haxby_r', 'colorblind_10', 'colorblind_10_r', 'colormap66', 'colormap66_r', 'colors', 'cool_dark', 'cool_dark_r', 'cool_light', 'cool_light_r', 'copper', 'copper_r', 'cork', 'cork_r', 'corko', 'corko_r', 'cosam', 'cosam12', 'cosam12_r', 'cosam_r', 'cosmic', 'cosmic_r', 'cubehelix1_16', 'cubehelix1_16_r', 'cubehelix2_16', 'cubehelix2_16_r', 'cubehelix3_16', 'cubehelix3_16_r', 'curl', 'curl_r', 'cyclic', 'cyclic_r', 'd_blgr3', 'd_blgr3_r', 'd_seteq2', 'd_seteq2_r', 'dark2', 'dark2_3', 'dark2_3_r', 'dark2_4', 'dark2_4_r', 'dark2_5', 'dark2_5_r', 'dark2_6', 'dark2_6_r', 'dark2_7', 'dark2_7_r', 'dark2_8', 'dark2_8_r', 'dark2_r', 'darkmint', 'darkmint_r', 'dasy_grbr1', 'dasy_grbr1_r', 'davos', 'davos_r', 'deep', 'deep_r', 'default', 'default_r', 'delta', 'delta_r', 'dense', 'dense_r', 'detail', 'detail_r', 'devon', 'devon_r', 'discrete_Bg', 'discrete_Bg_r', 'discrete_Bo', 'discrete_Bo_r', 'discrete_autumn', 'discrete_autumn_r', 'discrete_dark', 'discrete_dark_r', 'discrete_light_aut', 'discrete_light_aut_r', 'discrete_muted', 'discrete_muted_r', 'discrete_vaneyck', 'discrete_vaneyck_r', 'div1_blue_orange', 'div1_blue_orange_r', 'div2_gray_gold', 'div2_gray_gold_r', 'div3_green_brown', 'div3_green_brown_r', 'div5_asym_Ob', 'div5_asym_Ob_r', 'drought_severity', 'drought_severity_r', 'dusk', 'dusk_r', 'earth', 'earth_dark', 'earth_dark_r', 'earth_light', 'earth_light_r', 'earth_r', 'eclipse', 'eclipse_r', 'ember', 'ember_r', 'emerald', 'emerald_r', 'emergency', 'emergency_r', 'emrld', 'emrld_r', 'example', 'example_r', 'extrema', 'extrema_r', 'fall', 'fall_r', 'fes', 'fes_r', 'fire_dark', 'fire_dark_r', 'fire_light', 'fire_light_r', 'flamingo', 'flamingo_r', 'freeze', 'freeze_r', 'fushia_red_pink1', 'fushia_red_pink1_r', 'fusion', 'fusion_r', 'gauss3', 'gauss3_r', 'gem', 'gem_r', 'geyser', 'geyser_r', 'ghostlight', 'ghostlight_r', 'glasgow', 'glasgow_r', 'gnbu', 'gnbu_3', 'gnbu_3_r', 'gnbu_4', 'gnbu_4_r', 'gnbu_5', 'gnbu_5_r', 'gnbu_6', 'gnbu_6_r', 'gnbu_7', 'gnbu_7_r', 'gnbu_8', 'gnbu_8_r', 'gnbu_9', 'gnbu_9_r', 'gnbu_r', 'gothic', 'gothic_r', 'grads_default', 'grads_default_r', 'grads_rainbow', 'grads_rainbow_r', 'gray', 'gray_5', 'gray_5_r', 'gray_r', 'grayc', 'grayc_r', 'green_9_17e', 'green_9_17e_r', 'green_c_gry1', 'green_c_gry1_r', 'green_gr1214b', 'green_gr1214b_r', 'green_green1', 'green_green1_r', 'green_green6', 'green_green6_r', 'green_mistyteal', 'green_mistyteal_r', 'green_mustard', 'green_mustard_r', 'green_rox', 'green_rox_r', 'greengrey_dark', 'greengrey_dark_r', 'greengrey_light', 'greengrey_light_r', 'greenorange_12', 'greenorange_12_r', 'greenorange_6', 'greenorange_6_r', 'greens', 'greens_3', 'greens_3_r', 'greens_4', 'greens_4_r', 'greens_5', 'greens_5_r', 'greens_6', 'greens_6_r', 'greens_7', 'greens_7_r', 'greens_8', 'greens_8_r', 'greens_9', 'greens_9_r', 'greens_dark', 'greens_dark_r', 'greens_light', 'greens_light_r', 'greens_r', 'greys', 'greys_3', 'greys_3_r', 'greys_4', 'greys_4_r', 'greys_5', 'greys_5_r', 'greys_6', 'greys_6_r', 'greys_7', 'greys_7_r', 'greys_8', 'greys_8_r', 'greys_9', 'greys_9_r', 'greys_dark', 'greys_dark_r', 'greys_light', 'greys_light_r', 'greys_r', 'gscyclic', 'gscyclic_r', 'gsdtol', 'gsdtol_r', 'gsltod', 'gsltod_r', 'gui_default', 'gui_default_r', 'guppy', 'guppy_r', 'haline', 'haline_r', 'hawaii', 'hawaii_r', 'heart_dark', 'heart_dark_r', 'heart_light', 'heart_light_r', 'helix', 'helix1', 'helix1_r', 'helix_r', 'hier1p', 'hier1p_r', 'hier2p', 'hier2p_r', 'hier4w', 'hier4w_r', 'hier5', 'hier5_r', 'high2ml', 'high2ml_r', 'high3', 'high3_r', 'high4', 'high4_r', 'high5', 'high5_r', 'hlu_default', 'hlu_default_r', 'holly', 'holly_r', 'horizon', 'horizon_r', 'hotcold_18lev', 'hotcold_18lev_r', 'hotcolr_19lev', 'hotcolr_19lev_r', 'hotres', 'hotres_r', 'hs_orange2', 'hs_orange2_r', 'ice', 'ice_r', 'iceburn', 'iceburn_r', 'imola', 'imola_r', 'infinity', 'infinity_r', 'jim_special_16', 'jim_special_16_r', 'jungle', 'jungle_r', 'l_oragnemed1', 'l_oragnemed1_r', 'l_orangemute1', 'l_orangemute1_r', 'l_orangesat1', 'l_orangesat1_r', 'l_purplowsat3', 'l_purplowsat3_r', 'l_purpmedsat3', 'l_purpmedsat3_r', 'l_purpwarm2', 'l_purpwarm2_r', 'l_red_warm1', 'l_red_warm1_r', 'l_redmuted4', 'l_redmuted4_r', 'l_redsat1', 'l_redsat1_r', 'l_turqmed2', 'l_turqmed2_r', 'l_turqsat1', 'l_turqsat1_r', 'l_yellowmed2', 'l_yellowmed2_r', 'lajolla', 'lajolla_r', 'lapaz', 'lapaz_r', 'lavender', 'lavender_r', 'lilac', 'lilac_r', 'lipari', 'lipari_r', 'lisbon', 'lisbon_r', 'lithology', 'lithology_r', 'magenta', 'magenta_r', 'managua', 'managua_r', 'matlab_hot', 'matlab_hot_r', 'matlab_hsv', 'matlab_hsv_r', 'matlab_jet', 'matlab_jet_r', 'matlab_lines', 'matlab_lines_r', 'matter', 'matter_r', 'mauve1', 'mauve1_r', 'mch_default', 'mch_default_r', 'mint', 'mint_r', 'navia', 'navia_r', 'naviaw', 'naviaw_r', 'ncl_default', 'ncl_default_r', 'ncview_default', 'ncview_default_r', 'neon', 'neon_r', 'neutral', 'neutral_r', 'nice_gfdl', 'nice_gfdl_r', 'nrl_sirkes', 'nrl_sirkes_nowhite', 'nrl_sirkes_nowhite_r', 'nrl_sirkes_r', 'nuclear', 'nuclear_r', 'nuuk', 'nuuk_r', 'ocean', 'ocean_r', 'oleron', 'oleron_r', 'orangeblue_dark', 'orangeblue_dark_r', 'orangeblue_light', 'orangeblue_light_r', 'orangegrey_dark', 'orangegrey_dark_r', 'orangegrey_light', 'orangegrey_light_r', 'oranges', 'oranges_3', 'oranges_3_r', 'oranges_4', 'oranges_4_r', 'oranges_5', 'oranges_5_r', 'oranges_6', 'oranges_6_r', 'oranges_7', 'oranges_7_r', 'oranges_8', 'oranges_8_r', 'oranges_9', 'oranges_9_r', 'oranges_dark', 'oranges_dark_r', 'oranges_light', 'oranges_light_r', 'oranges_r', 'orrd', 'orrd_3', 'orrd_3_r', 'orrd_4', 'orrd_4_r', 'orrd_5', 'orrd_5_r', 'orrd_6', 'orrd_6_r', 'orrd_7', 'orrd_7_r', 'orrd_8', 'orrd_8_r', 'orrd_9', 'orrd_9_r', 'orrd_r', 'oryel', 'oryel_r', 'oryell2', 'oryell2_r', 'oslo', 'oslo_r', 'other_outl_1', 'other_outl_1_r', 'other_outl_2', 'other_outl_2_r', 'other_outl_3', 'other_outl_3_r', 'other_outl_4', 'other_outl_4_r', 'other_outl_5', 'other_outl_5_r', 'other_outl_6', 'other_outl_6_r', 'other_outl_7', 'other_outl_7_r', 'other_outl_8', 'other_outl_8_r', 'oxy', 'oxy_r', 'paired', 'paired_10', 'paired_10_r', 'paired_11', 'paired_11_r', 'paired_12', 'paired_12_r', 'paired_3', 'paired_3_r', 'paired_4', 'paired_4_r', 'paired_5', 'paired_5_r', 'paired_6', 'paired_6_r', 'paired_7', 'paired_7_r', 'paired_8', 'paired_8_r', 'paired_9', 'paired_9_r', 'paired_r', 'pastel', 'pastel1', 'pastel1_3', 'pastel1_3_r', 'pastel1_4', 'pastel1_4_r', 'pastel1_5', 'pastel1_5_r', 'pastel1_6', 'pastel1_6_r', 'pastel1_7', 'pastel1_7_r', 'pastel1_8', 'pastel1_8_r', 'pastel1_9', 'pastel1_9_r', 'pastel1_r', 'pastel2', 'pastel2_3', 'pastel2_3_r', 'pastel2_4', 'pastel2_4_r', 'pastel2_5', 'pastel2_5_r', 'pastel2_6', 'pastel2_6_r', 'pastel2_7', 'pastel2_7_r', 'pastel2_8', 'pastel2_8_r', 'pastel2_r', 'pastel_r', 'peach', 'peach_r', 'pepper', 'pepper_r', 'perc2_9lev', 'perc2_9lev_r', 'percent_11lev', 'percent_11lev_r', 'perceptual_rainbow_16', 'perceptual_rainbow_16_r', 'phase', 'phase_r', 'pinkgreen_dark', 'pinkgreen_dark_r', 'pinkgreen_light', 'pinkgreen_light_r', 'pinkgrey_dark', 'pinkgrey_dark_r', 'pinkgrey_light', 'pinkgrey_light_r', 'pinks_dark', 'pinks_dark_r', 'pinks_light', 'pinks_light_r', 'pinkyl', 'pinkyl_r', 'piyg', 'piyg_10', 'piyg_10_r', 'piyg_11', 'piyg_11_r', 'piyg_3', 'piyg_3_r', 'piyg_4', 'piyg_4_r', 'piyg_5', 'piyg_5_r', 'piyg_6', 'piyg_6_r', 'piyg_7', 'piyg_7_r', 'piyg_8', 'piyg_8_r', 'piyg_9', 'piyg_9_r', 'piyg_r', 'posneg_1', 'posneg_1_r', 'posneg_2', 'posneg_2_r', 'pr_mist', 'pr_mist_r', 'prcp_1', 'prcp_1_r', 'prcp_2', 'prcp_2_r', 'prcp_3', 'prcp_3_r', 'precip2_15lev', 'precip2_15lev_r', 'precip2_17lev', 'precip2_17lev_r', 'precip3_16lev', 'precip3_16lev_r', 'precip4_11lev', 'precip4_11lev_r', 'precip4_diff_19lev', 'precip4_diff_19lev_r', 'precip_11lev', 'precip_11lev_r', 'precip_diff_12lev', 'precip_diff_12lev_r', 'precip_diff_1lev', 'precip_diff_1lev_r', 'prgn', 'prgn_10', 'prgn_10_r', 'prgn_11', 'prgn_11_r', 'prgn_3', 'prgn_3_r', 'prgn_4', 'prgn_4_r', 'prgn_5', 'prgn_5_r', 'prgn_6', 'prgn_6_r', 'prgn_7', 'prgn_7_r', 'prgn_8', 'prgn_8_r', 'prgn_9', 'prgn_9_r', 'prgn_r', 'pride', 'pride_r', 'prinsenvlag', 'prinsenvlag_r', 'prism', 'prism_r', 'psgcap', 'psgcap_r', 'pubu', 'pubu_3', 'pubu_3_r', 'pubu_4', 'pubu_4_r', 'pubu_5', 'pubu_5_r', 'pubu_6', 'pubu_6_r', 'pubu_7', 'pubu_7_r', 'pubu_8', 'pubu_8_r', 'pubu_9', 'pubu_9_r', 'pubu_r', 'pubugn', 'pubugn_3', 'pubugn_3_r', 'pubugn_4', 'pubugn_4_r', 'pubugn_5', 'pubugn_5_r', 'pubugn_6', 'pubugn_6_r', 'pubugn_7', 'pubugn_7_r', 'pubugn_8', 'pubugn_8_r', 'pubugn_9', 'pubugn_9_r', 'pubugn_r', 'puor', 'puor_10', 'puor_10_r', 'puor_11', 'puor_11_r', 'puor_3', 'puor_3_r', 'puor_4', 'puor_4_r', 'puor_5', 'puor_5_r', 'puor_6', 'puor_6_r', 'puor_7', 'puor_7_r', 'puor_8', 'puor_8_r', 'puor_9', 'puor_9_r', 'puor_r', 'purd', 'purd_3', 'purd_3_r', 'purd_4', 'purd_4_r', 'purd_5', 'purd_5_r', 'purd_6', 'purd_6_r', 'purd_7', 'purd_7_r', 'purd_8', 'purd_8_r', 'purd_9', 'purd_9_r', 'purd_r', 'purp', 'purp2', 'purp2_r', 'purp_pink', 'purp_pink_r', 'purp_r', 'purple_16', 'purple_16_r', 'purplegray_12', 'purplegray_12_r', 'purplegray_6', 'purplegray_6_r', 'purplegrey_dark', 'purplegrey_dark_r', 'purplegrey_light', 'purplegrey_light_r', 'purples', 'purples_3', 'purples_3_r', 'purples_4', 'purples_4_r', 'purples_5', 'purples_5_r', 'purples_6', 'purples_6_r', 'purples_7', 'purples_7_r', 'purples_8', 'purples_8_r', 'purples_9', 'purples_9_r', 'purples_dark', 'purples_dark_r', 'purples_light', 'purples_light_r', 'purples_r', 'purpor', 'purpor_r', 'radar', 'radar_1', 'radar_1_r', 'radar_r', 'rainbow', 'rainbow_dark', 'rainbow_dark_r', 'rainbow_gray', 'rainbow_gray_r', 'rainbow_light', 'rainbow_light_r', 'rainbow_r', 'rainbow_white', 'rainbow_white_gray', 'rainbow_white_gray_r', 'rainbow_white_r', 'rainforest', 'rainforest_r', 'rdbu', 'rdbu_10', 'rdbu_10_r', 'rdbu_11', 'rdbu_11_r', 'rdbu_3', 'rdbu_3_r', 'rdbu_4', 'rdbu_4_r', 'rdbu_5', 'rdbu_5_r', 'rdbu_6', 'rdbu_6_r', 'rdbu_7', 'rdbu_7_r', 'rdbu_8', 'rdbu_8_r', 'rdbu_9', 'rdbu_9_r', 'rdbu_r', 'rdgy', 'rdgy_10', 'rdgy_10_r', 'rdgy_11', 'rdgy_11_r', 'rdgy_3', 'rdgy_3_r', 'rdgy_4', 'rdgy_4_r', 'rdgy_5', 'rdgy_5_r', 'rdgy_6', 'rdgy_6_r', 'rdgy_7', 'rdgy_7_r', 'rdgy_8', 'rdgy_8_r', 'rdgy_9', 'rdgy_9_r', 'rdgy_r', 'rdpu', 'rdpu_3', 'rdpu_3_r', 'rdpu_4', 'rdpu_4_r', 'rdpu_5', 'rdpu_5_r', 'rdpu_6', 'rdpu_6_r', 'rdpu_7', 'rdpu_7_r', 'rdpu_8', 'rdpu_8_r', 'rdpu_9', 'rdpu_9_r', 'rdpu_r', 'rdylbu', 'rdylbu_10', 'rdylbu_10_r', 'rdylbu_11', 'rdylbu_11_r', 'rdylbu_3', 'rdylbu_3_r', 'rdylbu_4', 'rdylbu_4_r', 'rdylbu_5', 'rdylbu_5_r', 'rdylbu_6', 'rdylbu_6_r', 'rdylbu_7', 'rdylbu_7_r', 'rdylbu_8', 'rdylbu_8_r', 'rdylbu_9', 'rdylbu_9_r', 'rdylbu_r', 'rdylgn', 'rdylgn_10', 'rdylgn_10_r', 'rdylgn_11', 'rdylgn_11_r', 'rdylgn_3', 'rdylgn_3_r', 'rdylgn_4', 'rdylgn_4_r', 'rdylgn_5', 'rdylgn_5_r', 'rdylgn_6', 'rdylgn_6_r', 'rdylgn_7', 'rdylgn_7_r', 'rdylgn_8', 'rdylgn_8_r', 'rdylgn_9', 'rdylgn_9_r', 'rdylgn_r', 'red2b', 'red2b_r', 'red_16', 'red_16_r', 'red_1lt', 'red_1lt_r', 'redgrey_dark', 'redgrey_dark_r', 'redgrey_light', 'redgrey_light_r', 'redor', 'redor_r', 'redp1', 'redp1_r', 'reds', 'reds_3', 'reds_3_r', 'reds_4', 'reds_4_r', 'reds_5', 'reds_5_r', 'reds_6', 'reds_6_r', 'reds_7', 'reds_7_r', 'reds_8', 'reds_8_r', 'reds_9', 'reds_9_r', 'reds_dark', 'reds_dark_r', 'reds_light', 'reds_light_r', 'reds_r', 'redshift', 'redshift_r', 'redsun1', 'redsun1_r', 'redteal_dark', 'redteal_dark_r', 'redteal_light', 'redteal_light_r', 'redy3', 'redy3_r', 'rh_19lev', 'rh_19lev_r', 'roma', 'roma_r', 'romao', 'romao_r', 'rpinky', 'rpinky_r', 'safe', 'safe_r', 'sapphire', 'sapphire_r', 'savanna', 'savanna_r', 'saw3', 'saw3_r', 'seaice_1', 'seaice_1_r', 'seaice_2', 'seaice_2_r', 'seasons', 'seasons_r', 'seaweed', 'seaweed_r', 'sepia', 'sepia_r', 'set1', 'set1_3', 'set1_3_r', 'set1_4', 'set1_4_r', 'set1_5', 'set1_5_r', 'set1_6', 'set1_6_r', 'set1_7', 'set1_7_r', 'set1_8', 'set1_8_r', 'set1_9', 'set1_9_r', 'set1_r', 'set2', 'set2_3', 'set2_3_r', 'set2_4', 'set2_4_r', 'set2_5', 'set2_5_r', 'set2_6', 'set2_6_r', 'set2_7', 'set2_7_r', 'set2_8', 'set2_8_r', 'set2_r', 'set3', 'set3_10', 'set3_10_r', 'set3_11', 'set3_11_r', 'set3_12', 'set3_12_r', 'set3_3', 'set3_3_r', 'set3_4', 'set3_4_r', 'set3_5', 'set3_5_r', 'set3_6', 'set3_6_r', 'set3_7', 'set3_7_r', 'set3_8', 'set3_8_r', 'set3_9', 'set3_9_r', 'set3_r', 'sinebow_dark', 'sinebow_dark_r', 'sinebow_light', 'sinebow_light_r', 'so4_21', 'so4_21_r', 'so4_23', 'so4_23_r', 'solar', 'solar_r', 'spectral', 'spectral_10', 'spectral_10_r', 'spectral_11', 'spectral_11_r', 'spectral_3', 'spectral_3_r', 'spectral_4', 'spectral_4_r', 'spectral_5', 'spectral_5_r', 'spectral_6', 'spectral_6_r', 'spectral_7', 'spectral_7_r', 'spectral_8', 'spectral_8_r', 'spectral_9', 'spectral_9_r', 'spectral_r', 'speed', 'speed_r', 'speed_yel', 'speed_yel_r', 'spread_15lev', 'spread_15lev_r', 'srip_reanalysis', 'srip_reanalysis_r', 'sunburst', 'sunburst_r', 'sunset', 'sunset_r', 'sunsetdark', 'sunsetdark_r', 'sunshine_9lev', 'sunshine_9lev_r', 'sunshine_diff_12lev', 'sunshine_diff_12lev_r', 'swamp', 'swamp_r', 't2m_29lev', 't2m_29lev_r', 'tableau_10', 'tableau_10_r', 'tableau_20', 'tableau_20_r', 'tableaulight_10', 'tableaulight_10_r', 'tableaumedium_10', 'tableaumedium_10_r', 'tbrAvg1', 'tbrAvg1_r', 'tbrStd1', 'tbrStd1_r', 'tbrVar1', 'tbrVar1_r', 'tbr_240_300', 'tbr_240_300_r', 'tbr_stdev_0_30', 'tbr_stdev_0_30_r', 'tbr_var_0_500', 'tbr_var_0_500_r', 'teal', 'teal_r', 'tealgrey_dark', 'tealgrey_dark_r', 'tealgrey_light', 'tealgrey_light_r', 'tealgrn', 'tealgrn_r', 'tealrose', 'tealrose_r', 'teals_dark', 'teals_dark_r', 'teals_light', 'teals_light_r', 'temp1', 'temp1_r', 'temp_19lev', 'temp_19lev_r', 'temp_diff_18lev', 'temp_diff_18lev_r', 'temp_diff_1lev', 'temp_diff_1lev_r', 'tempm1', 'tempm1_r', 'tempo', 'tempo_r', 'temps', 'temps_r', 'test', 'test_r', 'testcmap', 'testcmap_r', 'thelix', 'thelix_r', 'thermal', 'thermal_r', 'tofino', 'tofino_r', 'tokyo', 'tokyo_r', 'topo_15lev', 'topo_15lev_r', 'torch', 'torch_r', 'toxic', 'toxic_r', 'tr4', 'tr4_r', 'trafficlight_9', 'trafficlight_9_r', 'tree', 'tree_r', 'tropic', 'tropic_r', 'tropical', 'tropical_r', 'turbid', 'turbid_r', 'turku', 'turku_r', 'turq1lt', 'turq1lt_r', 'turqw1', 'turqw1_r', 'uniform', 'uniform_r', 'vanimo', 'vanimo_r', 'vegetation_ClarkU', 'vegetation_ClarkU_r', 'vegetation_modis', 'vegetation_modis_r', 'vik', 'vik_r', 'viko', 'viko_r', 'viola', 'viola_r', 'vivid', 'vivid_r', 'voltage', 'voltage_r', 'vvlt_turq3', 'vvlt_turq3_r', 'w5m4', 'w5m4_r', 'w_ymiddle1', 'w_ymiddle1_r', 'warm_dark', 'warm_dark_r', 'warm_light', 'warm_light_r', 'water_dark', 'water_dark_r', 'water_light', 'water_light_r', 'waterlily', 'waterlily_r', 'watermelon', 'watermelon_r', 'wgne15', 'wgne15_r', 'wh_bl_gr_ye_re', 'wh_bl_gr_ye_re_r', 'wildfire', 'wildfire_r', 'wind_17lev', 'wind_17lev_r', 'wind_dark', 'wind_dark_r', 'wind_light', 'wind_light_r', 'wlteqcool', 'wlteqcool_r', 'wmutedset', 'wmutedset_r', 'wxpEnIR', 'wxpEnIR_r', 'yel15', 'yel15_r', 'yel3', 'yel3_r', 'yel_peach_br', 'yel_peach_br_r', 'yellowgrey_dark', 'yellowgrey_dark_r', 'yellowgrey_light', 'yellowgrey_light_r', 'yellowpurple_dark', 'yellowpurple_dark_r', 'yellowpurple_light', 'yellowpurple_light_r', 'yellows_dark', 'yellows_dark_r', 'yellows_light', 'yellows_light_r', 'yellowsun', 'yellowsun_r', 'yelsat100', 'yelsat100_r', 'yg1', 'yg1_r', 'yg3', 'yg3_r', 'ylgn', 'ylgn_3', 'ylgn_3_r', 'ylgn_4', 'ylgn_4_r', 'ylgn_5', 'ylgn_5_r', 'ylgn_6', 'ylgn_6_r', 'ylgn_7', 'ylgn_7_r', 'ylgn_8', 'ylgn_8_r', 'ylgn_9', 'ylgn_9_r', 'ylgn_r', 'ylgnbu', 'ylgnbu_3', 'ylgnbu_3_r', 'ylgnbu_4', 'ylgnbu_4_r', 'ylgnbu_5', 'ylgnbu_5_r', 'ylgnbu_6', 'ylgnbu_6_r', 'ylgnbu_7', 'ylgnbu_7_r', 'ylgnbu_8', 'ylgnbu_8_r', 'ylgnbu_9', 'ylgnbu_9_r', 'ylgnbu_r', 'ylorbr', 'ylorbr_3', 'ylorbr_3_r', 'ylorbr_4', 'ylorbr_4_r', 'ylorbr_5', 'ylorbr_5_r', 'ylorbr_6', 'ylorbr_6_r', 'ylorbr_7', 'ylorbr_7_r', 'ylorbr_8', 'ylorbr_8_r', 'ylorbr_9', 'ylorbr_9_r', 'ylorbr_r', 'ylorrd', 'ylorrd_3', 'ylorrd_3_r', 'ylorrd_4', 'ylorrd_4_r', 'ylorrd_5', 'ylorrd_5_r', 'ylorrd_6', 'ylorrd_6_r', 'ylorrd_7', 'ylorrd_7_r', 'ylorrd_8', 'ylorrd_8_r', 'ylorrd_9', 'ylorrd_9_r', 'ylorrd_r']\n</code></pre> <p>As the list os colormaps is exhaustive, you have to find the suitable one by referring the suitable one from https://pratiman-91.github.io/colormaps.</p>"},{"location":"colormaps/#apply-custom-colormap","title":"Apply Custom Colormap","text":"<p>By default, the colormap for specif variable is already set by <code>wrfplot</code>. If you do not like the default colormap, then you can choose one of the supported colormaps from the list above. Assuming that you would like to use a colormap named <code>jet</code> for <code>T2</code> variable (surface Temperature), you can supply <code>jet</code> with <code>--cmap</code> command line option as shown below:</p> <pre><code>wrfplot --vars \"T2\" --cmap jet --input ../../test/wrfout_data/wrfout_d01_2021-05-13_00_00_00 --output ../../test/wrfout_data/output_images\n</code></pre> <p>Example image generated by the above command is shown below:</p> Image Created With <code>--cmap</code> Option"},{"location":"contribution/","title":"Contribution","text":""},{"location":"contribution/#contributing-to-wrfplot","title":"Contributing to wrfplot","text":"<p>Thanks for taking the time to think about contributing to a <code>wrfplot</code> project. Weather you are a developer or user, you can contribute in your own way.</p>"},{"location":"contribution/#reporting-bugs","title":"Reporting Bugs","text":"<p>Head over to https://github.com/wxguy/wrfplot/issues for reporting bugs. Before creating bug reports, please check existing issues and pull requests as you might find out that you don\u2019t need to create one.</p> <p>Note</p> <p>If you find a Closed issue that seems like it is the same thing that you\u2019re experiencing, open a new issue and include a link to the original issue in the body of your new one.</p>"},{"location":"contribution/#suggesting-enhancements","title":"Suggesting Enhancements","text":"<p>You can also help us to improve the application, including completely new features and minor improvements to existing functionality. When you are creating a bug report or asking for new functionalities, you have to keep in mind the following:</p> <ul> <li>Use a clear and descriptive title for the issue to identify the suggestion.</li> <li>Provide a step-by-step description of the suggested enhancement in as many details as possible.</li> <li>Provide specific examples to demonstrate the steps. Include copy/pasteable snippets which you use in those examples, as Markdown code blocks.</li> <li>Describe the current behaviour and explain which behaviour you expected to see instead and why.</li> <li>Include screenshots and animated GIFs which help you demonstrate the steps or point out the part of wrfplot which the suggestion is related to.</li> <li>Explain why this enhancement would be useful to most wrfplot users.</li> <li>List some other analysis software or applications where this enhancement exists.</li> <li>Specify the name and version of the OS you\u2019re using.</li> </ul>"},{"location":"contribution/#pull-requests","title":"Pull Requests","text":"<p>If you feel that you can improve the application that would benefit others, you are most welcome to make a contribution through pull request on GitHub. While making a pull request, please ensure that all necessary aspects associated with new features such as documentation, and examples are properly written.</p> <p>Note</p> <p>This document has been inspired by the contribution guidelines of psyplot</p>"},{"location":"install/","title":"Installation Guide","text":"<p>This section briefly guides you to install wrfplot on a variety of Operating Systems viz., Linux, Windows and macOS.</p>"},{"location":"install/#system-requirements","title":"System Requirements","text":"<p>Here are the following dependencies you should know about before installing <code>wrfplot</code>:</p> <ul> <li> <p>Operating System (Windows): Windows 10 or above. May work on Windows 7/ 8 but not tested.</p> </li> <li> <p>Operating System (Linux): Ubuntu 20.04 or above. If you wish to use it on Red Hat or Cent OS based, then it should be versioned 8 or above.</p> </li> <li> <p>Architecture: x86_64 or simple called 64bit. Don't download if you have 32bit machine. It won't work.</p> </li> </ul>"},{"location":"install/#install-on-windows-linux-and-macos","title":"Install on Windows, Linux and macOS","text":"<p>Support for all platforms is provided through conda-forge. If you have already conda installed, then the following command is enough to install <code>wrfplot</code>:</p> <pre><code>conda install -c cond-forge wrfplot\n</code></pre> <p>Check your installation by typing the following command which should show the version number:</p> <pre><code>wrfplot --version\n2.0.2\n</code></pre>"},{"location":"install/#standalone-binary-installation","title":"Standalone (Binary) Installation","text":"<p>Since it is intended to be used as a command line, the application is distributed as stand-alone on both Linux and Windows. You must download the correct version of application installer or setup file. Both are described in the subsection below.</p>"},{"location":"install/#installation-under-windows","title":"Installation under Windows","text":"<p>Go to https://github.com/wxguy/wrfplot/releases and look for the latest release. The Windows setup executable will have name <code>wrfplot-windows-64bit.exe</code> and download it to the local disk. The rest of the installation procedure is same as you do for any other windows setup files. Here are the complete process of installing in visual format:</p> Double Click on Windows Executable Accept Windows User Elevation Windows Setup Welcome Screen Accept User Agreement Choose Install Option (recommended <code>Install just for me</code>) Windows Install Directory (recommended not to change) Wait till Install Complete Click Finish to Close Setup <p>That\u2019s it. You have successfully installed <code>wrfplot</code>.</p>"},{"location":"install/#installation-under-linux","title":"Installation under Linux","text":"<p>Go to https://github.com/wxguy/wrfplot/releases and look for the latest release. The Linux installer will have name <code>wrfplot</code>-linux-64bit.run. Click on the link and download it to local disk. Thereafter, execute the below command (assuming that the Linux installer is downloaded at ~/Downloads):</p> <pre><code>bash ~/Downloads/wrfplot-linux-64bit.run\n</code></pre> <p>that would produce the output as indicated below:</p> <pre><code>Verifying archive integrity...  100%   MD5 checksums are OK. All good.\nUncompressing wrfplot_Linux_Installer  100%\nRemoving previous install directory...\nInstalling wrfplot to /home/wxguy/.wrfplot...\nRenaming '/home/wxguy/wrfplot' directory to '/home/wxguy/.wrfplot'..\n'/home/wxguy/.local/bin' directory already exists. Not creating it.\nLinking wrfplot executable...\nUpdating .bashrc file to include install directory...\n/home/wxguy/.local/bin directory already added to PATH. Skipping...\nInstallation completed. Please restart your terminal to continue using wrfplot...\n</code></pre>"},{"location":"install/#installation-under-macos","title":"Installation under macOS","text":"<p>There is no binary distribution made available for macOS at the moment. The support for macOS is provided through miniconda. If you already have miniconda/ anaconda installed, you can execute the following to install <code>wrfplot</code>:</p> <pre><code>conda install -c conda-forge wrfplot\n</code></pre>"},{"location":"install/#confirm-installation","title":"Confirm Installation","text":"<p>The easiest way to check the installation is to issue the following command in the terminal:</p> <pre><code>wrfplot --help\n</code></pre> <p>This should produce brief information about the <code>wrfplot</code> as shown below:</p> <pre><code>usage: wrfplot [-h] [--list-vars] [--input &lt;input_file&gt;] [--output &lt;output_dir&gt;] [--vars &lt;variable(s)&gt;] [--ulevels &lt;upper-levels&gt;]\n                  [--list-cmaps] [--cmap &lt;cmap-name&gt;] [--clevels &lt;contour-levels&gt;] [--dpi &lt;value&gt;] [--gif] [--gif-speed &lt;seconds&gt;]\n                  [--version]\n\nCommand line application to plot static WRF model prognostic products...\n\noptions:\n  -h, --help            show this help message and exit\n  --list-vars           Show list of variables supported by wrfplot and exit.\n  --input &lt;input_file&gt;  Path to WRF generated netCDF.\n  --output &lt;output_dir&gt;\n                        Path to output directory for saving plotted images.\n  --vars &lt;variable(s)&gt;  Name of the variable to be plotted. Multiple variables are to be separated with ','. Use '--list-vars' option\n                        to see list of supported variables.\n  --ulevels &lt;upper-levels&gt;\n                        Provide custom upper level(s) when plotting upper atmospheric data. Each level is to be separated by ',' i.e.,\n                        '925,850,700'. Use '--list-vars' to know list of supported upper level variables.\n  --list-cmaps          List colour maps (cmaps) supported by wrfplot. Refer https://pratiman-91.github.io/colormaps for information on\n                        each colourmaps.\n  --cmap &lt;cmap-name&gt;    Valid colormap name to fill colors. Use '--list-cmaps' option to see list of supported colormaps. Must have\n                        minimum 11 colors, else will lead to error.\n  --clevels &lt;contour-levels&gt;\n                        Provide custom contour level(s) to highlight data. Levels are to be in ascending order and separated by ','\n                        i.e., '24,26,28'. If single value is provided, clevels will be automatically calculated.\n  --dpi &lt;value&gt;         Increase or decrease the plotted image resolution. Default is 125. More is higher resolution and less is course\n                        resolution. Higher values will reduce the speed of plot.\n  --gif                 If applied, creates an animated GIF image. GIF image will be saved same location as other images with a name\n                        specifed in '--vars' option.\n  --gif-speed &lt;seconds&gt;\n                        Set speed of GIF frame in seconds. Default is 0.5 sec. Lower value increases the speed of animation. To be used\n                        with '--gif' option to take effect.\n  --version             Print version information of 'wrfplot' and exit.\n\n\u00a9 J Sundar, wrf.guy@gmail.com, 2024\n</code></pre> <p>If you get the inbuilt help page of <code>wrfplot</code>, then it is ensured that you have successfully installed <code>wrfplot</code>.</p>"},{"location":"license/","title":"License","text":"<p><code>wrfplot</code> is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License  as published by the Free Software Foundation, either version 3 of the License, or any later version. </p> <p><code>wrfplot</code> is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty  of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.</p> <p>You should have received a copy of the GNU General Public License along with <code>wrfplot</code>.  If not, see http://www.gnu.org/licenses/.</p>"},{"location":"support/","title":"Support","text":"<p>If you encounter any bugs or issues that have not been reported yet, you must  open an issue at https://github.com/wxguy/wrfplot/issues.</p> <p>For any other questions or inquiries, feel free to reach out to the project developer(s):</p> <p>J Sundar wrf.guy@gmail.com</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#basic-usage","title":"Basic Usage","text":"<p>The first step in plotting diagnostic variable to find what all variables are supported by <code>wrfplot</code> application. This is required as the application would accept variable names only in certain string format.  Therefore, you should list and review the name of variable by issuing the following command in the terminal:</p> <pre><code>wrfplot --list-vars\n</code></pre> <p>Invoking the above command will produce the following output:</p> <pre><code>****    ****    ****    ****    ****    ****    ****\nVariables starting with 'u_' are upper air variable availabe at 925, 850, 700, 600, 500, 400, 300 and 200 hPa heights...\n****    ****    ****    ****    ****    ****    ****\n\nVariable \"slp\"   --&gt; Mean Sea Level Pressure (hPa)\nVariable \"winds\"   --&gt; Surface (10M) Wind Speed and Direction (Kt)\nVariable \"rh2\"   --&gt; 2m Relative Humidity (%)\nVariable \"T2\"   --&gt; 2m Temperature (\u00b0C)\nVariable \"mcape\"   --&gt; CAPE Maximum ($J kg^{1}$)\nVariable \"mcin\"   --&gt; Minimum Convective Inhibition ($J kg^{1}$)\nVariable \"lcl\"   --&gt; Lifting Condensation Level (Meters)\nVariable \"lfc\"   --&gt; Level of Free Convection (Meters)\nVariable \"ctt\"   --&gt; Cloud Top Temperature (\u00b0C)\nVariable \"low_cloudfrac\"   --&gt; Low Cloud Coverage (%)\nVariable \"mid_cloudfrac\"   --&gt; Medium Cloud Coverage (%)\nVariable \"high_cloudfrac\"   --&gt; High Cloud Coverage (%)\nVariable \"mdbz\"   --&gt; Maximum Reflectivity (dBZ)\nVariable \"helicity\"   --&gt; Storm Relative Helicity ($m^{2} s^{-2}$)\nVariable \"pw\"   --&gt; Precipitable Water ($kg m^{-2}$)\nVariable \"td2\"   --&gt; 2m Dew Point Temperature (\u00b0C)\nVariable \"ppn_accum\"   --&gt; Accumulated Precipitation (mm)\nVariable \"ppn_conv\"   --&gt; Convective Precipitation (mm)\nVariable \"ppn\"   --&gt; Precipitation/ Rain (mm)\nVariable \"updraft_helicity\"   --&gt; Updraft Helicity ($m^{2} s^{-2}$)\nVariable \"u_theta_e\"   --&gt; Equivalent Potential Temperature (\u00b0C)\nVariable \"u_avo\"   --&gt; Absolute Vorticity ($10^{-5} s^{-1}$)\nVariable \"u_dbz\"   --&gt; Reflectivity (dBz)\nVariable \"u_geopotential\"   --&gt; Geopotential - Mass Grid ($m^{2} s^{-2}$)\nVariable \"u_omg\"   --&gt; Omega ($Pa s^{-1}s$)\nVariable \"u_pressure\"   --&gt; Full Model Pressure (hPa)\nVariable \"u_pvo\"   --&gt; Potential Vorticity (PVU)\nVariable \"u_td\"   --&gt; Dew Point Temperature (\u00b0C)\nVariable \"u_rh\"   --&gt; Relative Humidity (%)\nVariable \"u_theta\"   --&gt; Potential Temperature (\u00b0C)\nVariable \"u_temp\"   --&gt; Temperature (\u00b0C)\nVariable \"u_tv\"   --&gt; Virtual Temperature (\u00b0C)\nVariable \"u_twb\"   --&gt; Wet Bulb Temperature (\u00b0C)\nVariable \"u_winds\"   --&gt; Wind Speed and Direction (Kt)\nVariable \"u_cin\"   --&gt; Convective Inhibition ($J kg^{1}$)\nVariable \"u_cape\"   --&gt; Convective Available Potential Energy ($J kg^{1}$)\n</code></pre> <p>The above console print has two names. One with quote and the other is without.  The name within quote such as \"slp\" is called short variable, and without a quote is called long variable.  You can read through a list to take note of what parameter you want to plot.  For example, if you need to plot <code>2m Relative Humidity</code>, then you need to remember the sort variable name in the first  quote <code>\u201c\u201d</code> i.e, <code>\u201crh2\u201d</code>. With this, we will proceed ahead to plot \u201crh2\u201d variable. To plot any variable,  there are minimum three arguments required to be provided. They are <code>--vars</code>, <code>--input</code> and <code>--output</code>.  Details of these would be discussed later.</p>"},{"location":"usage/#plotting-surface-variable","title":"Plotting Surface Variable","text":"<p>All the variables which does not start with <code>u_</code> string are surface variable.  Now, let's go ahead and start plotting the variable <code>\u201c2m Relative Humidity\u201d</code> named as <code>\u201crh2\u201d</code>:</p> <pre><code>wrfplot --vars \"rh2\" --input ../../test/wrfout_data/wrfout_d01_2021-05-13_00_00_00 --output ../../test/wrfout_data/output_images\n</code></pre> <p>Where:</p> <ul> <li><code>--vars</code> to indicate name of variable to plot</li> <li><code>--input</code> is path to wrfout netCDF file</li> <li><code>--output</code> is path to directory where final image files are required to be saved. The directory will be created if it does not exist</li> </ul> <p>Executing the above command will produce the following output in the terminal indicating the progress of plots and location of files saved in local filesystem.</p> <pre><code>*** Initialising plotting for variable : \"rh2\" ***\n\n        Plotting \"rh2\" for Time : \"13-05-2021_05:30\" UTC                                                                                 \n          Image saved at : \"../../test/wrfout_data/output_images/rh2_13-05-2021_05_30.png\"                            \n        Plotting \"rh2\" for Time : \"13-05-2021_08:30\" UTC                                                                                 \n          Image saved at : \"../../test/wrfout_data/output_images/rh2_13-05-2021_08_30.png\"                            \n        Plotting \"rh2\" for Time : \"13-05-2021_11:31\" UTC                                                                                 \n          Image saved at : \"../../test/wrfout_data/output_images/rh2_13-05-2021_11_31.png\"                            \n        Plotting \"rh2\" for Time : \"13-05-2021_14:30\" UTC                                                                                 \n          Image saved at : \"../../test/wrfout_data/output_images/rh2_13-05-2021_14_30.png\"                            \n        Plotting \"rh2\" for Time : \"13-05-2021_17:30\" UTC                                                                                 \n          Image saved at : \"../../test/wrfout_data/output_images/rh2_13-05-2021_17_30.png\"                            \n\nPlotting process completed. It took 0H:0M:9.682410S\n</code></pre> <p>The plotted output for variable will look like below:</p> Sample Relative Humidity Plot"},{"location":"usage/#plotting-upper-atmospheric-variables","title":"Plotting Upper Atmospheric Variables","text":"<p><code>wrfplot</code> supports a few upper atmospheric variables. These variables are indicated with <code>u_</code> tag for ease of identification.  By default, the plot for upper atmospheric variables would be plotted for <code>925</code>, <code>850</code>, <code>700</code>, <code>600</code>, <code>500</code>, <code>400</code>, <code>300</code> &amp; <code>200</code> hPa.  The upper levels can be controlled using <code>--ulevels</code> though. If you want to plot upper winds, you can specify the variable with the following command:</p> <pre><code>wrfplot --vars \"u_winds\" --input ../../test/wrfout_data/wrfout_d01_2021-05-13_00_00_00 --output ../../test/wrfout_data/output_images\n</code></pre> Sample Upper Winds Plot at 300hPa"},{"location":"usage/#plot-variable-at-specific-levels","title":"Plot Variable at Specific Level(s)","text":"<p>When plotting upper level variable, <code>wrfplot</code> will plot all the predefined levels viz., <code>925</code>, <code>850</code>, <code>700</code>, <code>600</code>, <code>500</code>, <code>400</code>, <code>300</code> &amp; <code>200</code> hPa. You can control the level at which variable is required to be plotted using <code>--ulevels</code> argument.  For example, if you need to plot at <code>800</code> and <code>750</code> hpa levels only, then you can apply the following command:</p> <pre><code>wrfplot --vars \"u_winds\" --ulevels \"800,750\" --input ../../test/wrfout_data/wrfout_d01_2021-05-13_00_00_00 --output ../../test/wrfout_data/output_images\n</code></pre> <p>Remember that the level values are to be separated by <code>,</code>. That should produce the following output in the terminal:</p> <pre><code>Using user provided upper level(s) : \"800.0,750.0\"\n\n*** Initialising plotting for variable : \"u_winds\" ***\n\n        Plotting \"u_winds\" for level \"800.0\" hPa and Time : \"13-05-2021_05:30\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_800.0_13-05-2021_05_30.png\"                  \n        Plotting \"u_winds\" for level \"800.0\" hPa and Time : \"13-05-2021_08:30\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_800.0_13-05-2021_08_30.png\"                  \n        Plotting \"u_winds\" for level \"800.0\" hPa and Time : \"13-05-2021_11:31\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_800.0_13-05-2021_11_31.png\"                  \n        Plotting \"u_winds\" for level \"800.0\" hPa and Time : \"13-05-2021_14:30\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_800.0_13-05-2021_14_30.png\"                  \n        Plotting \"u_winds\" for level \"800.0\" hPa and Time : \"13-05-2021_17:30\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_800.0_13-05-2021_17_30.png\"                  \n        Plotting \"u_winds\" for level \"750.0\" hPa and Time : \"13-05-2021_05:30\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_750.0_13-05-2021_05_30.png\"                  \n        Plotting \"u_winds\" for level \"750.0\" hPa and Time : \"13-05-2021_08:30\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_750.0_13-05-2021_08_30.png\"                  \n        Plotting \"u_winds\" for level \"750.0\" hPa and Time : \"13-05-2021_11:31\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_750.0_13-05-2021_11_31.png\"                  \n        Plotting \"u_winds\" for level \"750.0\" hPa and Time : \"13-05-2021_14:30\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_750.0_13-05-2021_14_30.png\"                  \n        Plotting \"u_winds\" for level \"750.0\" hPa and Time : \"13-05-2021_17:30\" UTC                                                       \n          Image saved at : \"../../test/wrfout_data/output_images/u_winds_750.0_13-05-2021_17_30.png\"                  \n\nPlotting process completed. It took 0H:0M:6.948402S\n</code></pre>"},{"location":"usage/#create-animation-gif","title":"Create Animation (GIF)","text":"<p>You can also create an animation of your plots using <code>--gif</code> option. Example command is given below:</p> <pre><code>wrfplot --vars \"rh2\" --gif --input ../../test/wrfout_data/wrfout_d01_2021-05-13_00_00_00 --output ../../test/wrfout_data/output_images \n</code></pre> <p>This would produce an animated <code>gif</code> image as shown below:</p> Sample Animation Plot"},{"location":"usage/#control-animation-speed","title":"Control Animation Speed","text":"<p>By default, the speed of the animation is kept as <code>0.5</code> sec. If you wish to increase or decrease the speed, you can do so by with <code>--gif-speed</code> option as indicated below where speed is increased to <code>0.25</code> sec:</p> <pre><code>wrfplot --vars \"rh2\" --gif --gif-speed 0.25 --input ../../test/wrfout_data/wrfout_d01_2021-05-13_00_00_00 --output ../../test/wrfout_data/output_images \n</code></pre> <p>This would increase the speed of animation as shown in the sample image file.</p> Animation Plot with Increased Speed"},{"location":"usage/#control-contour-levels","title":"Control Contour Levels","text":"<p>The default contour levels of each variable set based on a variable type.  For example, <code>Relative Humidity</code> variable will have 10 levels from 0 to 100 with an interval of 10. If you wish to change these intervals for specific variable, you may do so with <code>--clevels</code> argument.  Levels are to be in ascending order and separated by ','.  For example, <code>24,26,28,30,32,34,36</code>. Example plot to change temperature level to highlight the temperature range of interest will be as follows:</p> <pre><code>wrfplot --vars \"rh2\" --clevels '0,10,20,30,32,34,36,38,40,42,44,46' --input ../../test/wrfout_data/wrfout_d01_2021-05-13_00_00_00 --output ../../test/wrfout_data/output_images \n</code></pre> <p>After executing the command with <code>--clevels</code> argument, the plot would look like this:</p> T2 Plot with Custom <code>--clevels</code> Option <p>this can be compared with the default clevels set by the <code>wrfplot</code> as shown below:</p> T2 Plot with Default <code>--clevels</code> Option"},{"location":"variables/","title":"Supported Variables","text":"<p>This page contains the list of supported variables by wrfplot. You can see the same list from your terminal by  invoking <code>wrfplot --list-vars</code> command any time. The variable name starting with <code>u_</code> is upper atmospheric data at  standard pressure levels of <code>925</code>, <code>850</code>, <code>700</code>, <code>600</code>, <code>500</code>, <code>400</code>, <code>300</code> and <code>200</code> hPa. How to use the variable  name (first column) will be discussed in the next page.</p> Name of Variable Description with unit slp Mean Sea Level Pressure (hPa) winds 10M Surface Winds (Kt) rh2 2m Relative Humidity (%) T2 2m Temperature (\u00b0C) mcape CAPE Maximum (Jkg^1) mcin Minimum Convective Inhibition (Jkg^1) lcl Lifting Condensation Level (Meters) lfc Level of Free Convection (Meters) ctt Cloud Top Temperature (\u00b0C) low_cloudfrac Low Cloud Coverage (%) mid_cloudfrac Medium Cloud Coverage (%) high_cloudfrac High Cloud Coverage (%) mdbz Maximum Reflectivity (dBZ) helicity Storm Relative Helicity (m^2s^-2) pw Precipitable Water (kgm^-2) td2 2m Dew Point Temperature (\u00b0C) ppn_accum Accumulated Precipitation (mm) ppn_conv Convective Precipitation (mm) ppn Precipitation/ Rain (mm) u_theta_e Equivalent Potential Temperature (\u00b0C) u_avo Absolute Vorticity (10^-5s^-1) u_dbz Reflectivity (dBz) u_geopotential Geopotential - Mass Grid (m^2s^-2) u_omg Omega (Pas^-1s) u_pressure Full Model Pressure (hPa) u_pvo Potential Vorticity (PVU) u_td Dew Point Temperature (\u00b0C) u_rh Relative Humidity (%) u_theta Potential Temperature (\u00b0C) u_temp Temperature (\u00b0C) u_tv Virtual Temperature (\u00b0C) u_twb Wet Bulb Temperature (\u00b0C) u_updraft_helicity Updraft Helicity (m^2s^-2) u_winds Wind Speed and Direction (Kt) u_cin Convective Inhibition (Jkg^1) u_cape Convective Available Potential Energy (Jkg^1)"}]}